blueprint:
  name: LUX Sensor Stable (0.4.0)
  homeassistant:
    min_version: 2024.6.0
  description: >
    <br/>
    <br/>
  domain: automation
  source_url: https://github.com/asucrews/ha-blueprints/blob/main/automations/lux_sensor/lux_sensor.yaml
  input:
    required_entities:
      name: Required Entities
      description: The required entities for this automation
      collapsed: false
      input:
        lux_sensor:
          name: LUX Sensor
          description: >
            <br/>
            <br/>
          selector:
            entity:
              domain:
                - sensor
              multiple: false
        status_boolean:
          name: Binary Sensor
          description: >
            <br/>
            <br/>
          selector:
            entity:
              domain:
                - input_boolean
              multiple: false
        day_above_lux_level:
          name: Above LUX level for day time
          description: >
            <br/>
            <br/>
          default: 0
          selector:
            number:
              min: 0
              max: 250
              step: 10
              unit_of_measurement: lx
              mode: slider
        day_below_lux_level:
          name: Below LUX level for day time
          description: >
            <br/>
            <br/>
          default: 0
          selector:
            number:
              min: 0
              max: 250
              step: 10
              unit_of_measurement: lx
              mode: slider
        night_above_lux_level:
          name: Above LUX level for night time
          description: >
            <br/>
            <br/>
          default: 0
          selector:
            number:
              min: 0
              max: 250
              step: 10
              unit_of_measurement: lx
              mode: slider
        night_below_lux_level:
          name: Below LUX level for night time
          description: >
            <br/>
            <br/>
          default: 0
          selector:
            number:
              min: 0
              max: 250
              step: 10
              unit_of_measurement: lx
              mode: slider
    window_blinds_or_curtians:
      name: Window(s) Blind(s) or Curtian(s)
      description: Optional if you have blinds or curtians
      collapsed: true
      input:
        cover_blind:
          name: Blind or Blind Group
          description: <br/>
          default: "cover.none"
          selector:
            entity:
              domain:
                - cover
              multiple: false
        cover_curtain:
          name: Curtain or Curtain group
          description: <br/>
          default: "cover.none"
          selector:
            entity:
              domain:
                - cover
              multiple: false        

variables:
  lux_sensor: !input lux_sensor
  status_boolean: !input status_boolean
  day_above_lux_level: !input day_above_lux_level
  day_below_lux_level: !input day_below_lux_level
  night_above_lux_level: !input night_above_lux_level
  night_below_lux_level: !input night_below_lux_level
  cover_blind: !input cover_blind
  cover_curtain: !input cover_curtain

trigger:
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: !input lux_sensor

action:
  - variables:
      new_state: "{{ trigger.event.data.new_state.state }}"
      old_state: "{{ trigger.event.data.old_state.state }}"
  - if:
      - condition: state
        entity_id: binary_sensor.night
        state: "on"
    then:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ new_state | float > night_above_lux_level | float }}"
            sequence:
              - service: input_boolean.turn_on
                metadata: {}
                data: {}
                target:
                  entity_id: !input status_boolean
          - conditions:
              - condition: template
                value_template: "{{ new_state | float < night_below_lux_level | float }}"
            sequence:
              - service: input_boolean.turn_off
                metadata: {}
                data: {}
                target:
                  entity_id: !input status_boolean
    else:
      - if:
          - condition: or
            conditions:
              - condition: template
                value_template: "{{ cover_blind != 'cover.none' and is_state(cover_blind, 'close') }}"
              - condition: template
                value_template: "{{ cover_curtains != 'cover.none' and is_state(cover_curtains, 'close') }}"   
        then:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ new_state | float > night_above_lux_level | float }}"
                sequence:
                  - service: input_boolean.turn_on
                    metadata: {}
                    data: {}
                    target:
                      entity_id: !input status_boolean
              - conditions:
                  - condition: template
                    value_template: "{{ new_state | float < night_below_lux_level | float }}"
                sequence:
                  - service: input_boolean.turn_off
                    metadata: {}
                    data: {}
                    target:
                      entity_id: !input status_boolean
        else:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ new_state | float > day_above_lux_level | float }}"
                sequence:
                  - service: input_boolean.turn_on
                    metadata: {}
                    data: {}
                    target:
                      entity_id: !input status_boolean
              - conditions:
                  - condition: template
                    value_template: "{{ new_state | float < day_below_lux_level | float }}"
                sequence:
                  - service: input_boolean.turn_off
                    metadata: {}
                    data: {}
                    target:
                      entity_id: !input status_boolean

mode: single
max_exceeded: silent