blueprint:
  name: "Binary Sensor Notification"
  description: "Send a notification or trigger a custom action depending on the state switch of a binary_sensor"
  source_url: https://github.com/panhans/homeassistant/blob/main/blueprints/automation/panhans/binary_sensor_notification.yaml
  domain: automation
  input:
    sensor_entity:
      name: "Sensor"
      description: "Sensor which triggers the notification."
      selector:
        entity:
          domain: binary_sensor
    debounce_duration:
      name: "Debounce duration"
      description: "Duration time the notification won't be sent again after sensor changed its state."
      default: 10
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "s"
          mode: slider
          step: 1
    left_open_timer_helper:
      name: "Left Open Timer Helper"
      description:
      default: timer.none
      selector:
        entity:
          domain: timer
    notify_device:
      name: "Device to notify"
      description: Device which gets a notification.
      default: false
      selector:
        device:
          integration: mobile_app
    notify_group:
      name: Notification Group
      description: "The name of the notification group to call. ('notify' for all devices)"
      default: ""
    title:
      name: "Title"
      description: "Notification title"
    message:
      name: "Message"
      description: "Message to be sent"
    tag:
      name: "Tag"
      description: "If you want to do something in another automation"
      default: "tag-{{ trigger.entity_id }}"
    status_bar_icon:
      name: "Status bar icon"
      description: "Sets the status bar icon. (Android only)"
      default: mdi:home-assistant
      selector:
        icon:
          placeholder: mdi:home-assistant
    custom_action:
      name: "Custom Action"
      description: "An action which can be processed if notification is triggered"
      default: []
      selector:
        action: {}

variables:
  message: !input message
  title: !input title
  sensor_entity: !input sensor_entity
  debounce_duration: !input debounce_duration
  group_target: !input notify_group
  custom_action: !input custom_action
  notify_device: !input notify_device

trigger:
  - platform: state
    entity_id: !input "sensor_entity"
    to: "off"
    from: "on"
    id: Opened
  - platform: state
    entity_id: !input "sensor_entity"
    to: "on"
    from: "off"
    id: Closed
  - platform: state
    entity_id: !input "sensor_entity"
    to: "off"
    from: "on"
    for:
      hours: 0
      minutes: !input left_opened_minutes
      seconds: 0
    id: Left Opened

condition:
  condition: template
  value_template: >-
    {{ iif(this.attributes.last_triggered == None, 9999, as_timestamp(now()) - as_timestamp(this.attributes.last_triggered, default=0) ) >= (debounce_duration | int) }}

action:
  - choose:
      - conditions: "{{ not group_target }}"
        sequence:
          - service: 'notify.mobile_app_{{ device_attr(notify_device, "name") | slugify }}'
            data:
              title: "{{ title }}"
              message: "{{ message }}"
              data:
                ttl: 0
                priority: high
                notification_icon: !input "status_bar_icon"
                tag: !input tag
      - conditions: "{{ group_target is defined }}"
        sequence:
          - service: notify.{{ group_target }}
            data:
              title: "{{ title }} | {{ states('sensor.time') }}"
              message: "{{ message }}"
              data:
                ttl: 0
                priority: high
                notification_icon: !input "status_bar_icon"
                tag: !input tag
  - choose:
      - conditions:
          - "{{ custom_action is defined }}"
        sequence: !input "custom_action"
