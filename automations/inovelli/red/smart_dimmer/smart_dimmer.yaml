# Oringally by mitchcapper (https://gist.github.com/mitchcapper/ce031de253c0300a7141f43a6e1a405c)
# Modify by asucrews
blueprint:
  name: Inovelli Smart Dimmer FKA 2-1 Switch - VZW31-SN (ZWave-JS)
  description: >
    Perform actions on various scenes supported by the Inovelli Inovelli Smart Dimmer FKA 2-1 Switch<br/>
    <br/>
    Note that the x2, x3, x4, x5 variants DO NOT work if you have put your switch in 'Instant On' mode.<br/>
    <br/>
  domain: automation
  source_url: https://github.com/asucrews/ha-blueprints/blob/main/automations/inovelli/red/smart_dimmer/smart_dimmer.yaml
  input:
    inovelli_switch:
      name: Inovelli On/Off Switch
      description: The Inovelli On/Off or Dimmer Switch to do actions on
      selector:
        device:
          multiple: true
          integration: zwave_js
          manufacturer: Inovelli
          model: VZW31-SN


    up_action:
      name: Press Up Once Action
      description: Action to perform when pressing up once
      default: []
      selector:
        action:
    down_action:
      name: Press Down Once Action
      description: Action to perform when pressing down once
      default: []
      selector:
        action:
    config_action:
      name: Config Button Action
      description: The action to perform when the config button is pressed once
      default: []
      selector:
        action:

    up_hold_action:
      name: Hold Up Action
      description: Action to perform when holding the up button
      default: []
      selector:
        action:
    up_release_action:
      name: Release Up Action
      description: Action to perform when releasing the up button
      default: []
      selector:
        action:

    down_hold_action:
      name: Hold Down Action
      description: Action to perform when holding the down button
      default: []
      selector:
        action:
    down_release_action:
      name: Release Down Action
      description: Action to perform when releasing the down button
      default: []
      selector:
        action:

    config_hold_action:
      name: Hold Config Action
      description: Action to perform when holding the Config button
      default: []
      selector:
        action:
    config_release_action:
      name: Release Config Action
      description: Action to perform when releasing the Config button
      default: []
      selector:
        action:

    up_x2_action:
      name: Press Up Twice Action
      description: Action to perform when pressing up twice
      default: []
      selector:
        action:
    down_x2_action:
      name: Press Down Twice Action
      description: Action to perform when pressing down twice
      default: []
      selector:
        action:
    config_x2_action:
      name: Press Config Twice Times Action
      description: Action to perform when pressing config twice
      default: []
      selector:
        action:

    up_x3_action:
      name: Press Up 3 Times Action
      description: Action to perform on when pressing up 3 times
      default: []
      selector:
        action:
    down_x3_action:
      name: Press Down 3 Times Action
      description: Action to perform when pressing down 3 times
      default: []
      selector:
        action:
    config_x3_action:
      name: Press config 3 Times Action
      description: Action to perform when pressing config 3 times
      default: []
      selector:
        action:

    up_x4_action:
      name: Press Up 4 Times Action
      description: Action to perform when pressing up 4 times
      default: []
      selector:
        action:
    down_x4_action:
      name: Press Down 4 Times Action
      description: Action to perform when pressing down 4 times
      default: []
      selector:
        action:
    config_x4_action:
      name: Press config 4 Times Action
      description: Action to perform when pressing config 4 times
      default: []
      selector:
        action:

    up_x5_action:
      name: Press Up 5 Times Action
      description: Action to perform when pressing up 5 times
      default: []
      selector:
        action:
    down_x5_action:
      name: Press Down 5 Times Action
      description: Action to perform when pressing down 5 times
      default: []
      selector:
        action:
    config_x5_action:
      name: Press config 5 Times Action
      description: Action to perform when pressing config 5 times
      default: []
      selector:
        action:

mode: parallel
max_exceeded: silent

variables:
  # Mappings from https://support.inovelli.com/portal/en/kb/articles/how-to-setting-up-scenes-in-home-assistant
  
  # Buttons (scene_id)
  down_button: "001"
  up_button: "002"
  config_button: "003"

  # Action types (scene_value_id)
  press_x1: "KeyPressed"
  press_x2: "KeyPressed2x"
  press_x3: "KeyPressed3x"
  press_x4: "KeyPressed4x"
  press_x5: "KeyPressed5x"
  hold: "KeyHeldDown"
  release: "KeyReleased"

  # Shorthand to access the trigger data
  button: "{{ trigger.event.data.property_key_name }}"
  action_type: "{{ trigger.event.data.value }}"

trigger:
- platform: event
  event_type: zwave_js_value_notification
  event_data:
    command_class: 91
    device_id: !input inovelli_switch

action:
  choose:
    - conditions: "{{ button == up_button }}"
      sequence:
        - choose:
            - conditions: "{{ action_type == press_x1 }}"
              sequence: !input up_action
            - conditions: "{{ action_type == press_x2 }}"
              sequence: !input up_x2_action
            - conditions: "{{ action_type == press_x3 }}"
              sequence: !input up_x3_action
            - conditions: "{{ action_type == press_x4 }}"
              sequence: !input up_x4_action
            - conditions: "{{ action_type == press_x5 }}"
              sequence: !input up_x5_action
            - conditions: "{{ action_type == hold }}"
              sequence: !input up_hold_action
            - conditions: "{{ action_type == release }}"
              sequence: !input up_release_action
    - conditions: "{{ button == down_button }}"
      sequence:
        - choose:
            - conditions: "{{ action_type == press_x1 }}"
              sequence: !input down_action
            - conditions: "{{ action_type == press_x2 }}"
              sequence: !input down_x2_action
            - conditions: "{{ action_type == press_x3 }}"
              sequence: !input down_x3_action
            - conditions: "{{ action_type == press_x4 }}"
              sequence: !input down_x4_action
            - conditions: "{{ action_type == press_x5 }}"
              sequence: !input down_x5_action
            - conditions: "{{ action_type == hold }}"
              sequence: !input down_hold_action
            - conditions: "{{ action_type == release }}"
              sequence: !input down_release_action
    - conditions: "{{ button == config_action }}"
      sequence:
        - choose:
            - conditions: "{{ action_type == press_x1 }}"
              sequence: !input config_action
            - conditions: "{{ action_type == press_x2 }}"
              sequence: !input config_x2_action
            - conditions: "{{ action_type == press_x3 }}"
              sequence: !input config_x3_action
            - conditions: "{{ action_type == press_x4 }}"
              sequence: !input config_x4_action
            - conditions: "{{ action_type == press_x5 }}"
              sequence: !input config_x5_action
            - conditions: "{{ action_type == hold }}"
              sequence: !input config_hold_action
            - conditions: "{{ action_type == release }}"
              sequence: !input config_release_action