blueprint:
  name: Lock Management Dev (0.2.0.r13)
  description: lock Management 
  domain: automation
  source_url: https://github.com/asucrews/ha-blueprints/blob/main/automations/lock_management/lock_management.yaml
  input:
    lock:
      name: Lock
      description: Lock
      selector:
        entity:
          domain:
            - lock
          multiple: false
    auto_lock_timer:
      name: Auto Lock Timer
      description: Auto Lock Timer
      default: timer.none
      selector:
        entity:
          domain:
            - timer
          multiple: false
    notify_device:
      name: Easy Notify - Devices Notified (Optional)
      description: If you've enabled device notifications above, please select the devices to receive the notifications.
      default: []
      selector:
        device:
          filter:
            - integration: mobile_app
          multiple: true

variables:
  lock: !input lock
  auto_lock_timer: !input auto_lock_timer
  notify_device: !input notify_device

trigger:
  - platform: event
    event_type: lock_code_manager_lock_state_changed
    event_data:
       entity_id: !input lock
    id: LCM Event
  - platform: state
    entity_id: !input auto_lock_timer
    from: active
    to: idle
    id: Timer Finished

action:
  - choose:
      - conditions:
          - condition: trigger
            id:
              - LCM Event
        sequence:
          - variables:
              lock_state: "{{ trigger.event.data.state }}"
              code_slot: "{{ trigger.event.data.code_slot }}"
              code_slot_name: "{{ trigger.event.data.code_slot_name }}"
              action_text: "{{ trigger.event.data.action_text }}"
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ lock_state == 'locked' }}"
                sequence:
                  - if:
                    - condition: template
                      value_template: "{{ auto_lock_timer != 'timer.none' }}"
                    then:
                      - if:
                          - condition: state
                            entity_id: !input auto_lock_timer
                            state: active
                        then:
                          - service: timer.cancel
                            metadata: {}
                            data: {}
                            target:
                              entity_id: !input auto_lock_timer
                  - if:
                      - condition: template
                        value_template: "{{ notify_device | length > 0 }}"
                    then:
                      - repeat:
                          for_each: !input notify_device
                          sequence:
                            - service: notify.mobile_app_{{ device_attr(repeat.item, 'name') | slugify }}
                              data:
                                message: >
                                  {% if code_slot > 0 %}
                                    "{{ device_attr(lock, 'name') }} was unlocked by {{ code_slot_name }}"
                                  {% else %}
                                    "{{ device_attr(lock, 'name') }} was unlocked"
                                  {% endif %}
                                title: "{{ device_attr(lock, 'name') }}"
              - conditions:
                  - condition: template
                    value_template: "{{ lock_state == 'unlocked' }}"
                sequence:
                  - if:
                      - condition: template
                        value_template: "{{ auto_lock_timer != 'timer.none' }}"
                    then:
                      - if:
                          - condition: state
                            entity_id: !input auto_lock_timer
                            state: active
                        then:
                          - service: timer.cancel
                            metadata: {}
                            data: {}
                            target:
                              entity_id: !input auto_lock_timer
                          - service: timer.start
                            metadata: {}
                            data: {}
                            target:
                              entity_id: !input auto_lock_timer
                        else:
                          - service: timer.start
                            metadata: {}
                            data: {}
                            target:
                              entity_id: !input auto_lock_timer
                  - if:
                      - condition: template
                        value_template: "{{ notify_device | length > 0 }}"
                    then:
                      - repeat:
                          for_each: !input notify_device
                          sequence:
                            - service: notify.mobile_app_{{ device_attr(repeat.item, 'name') | slugify }}
                              data:
                                message: >
                                  {% if code_slot > 0 %}
                                    "{{ device_attr(lock, 'name') }} was unlocked by {{ code_slot_name }}"
                                  {% else %}
                                    "{{ device_attr(lock, 'name') }} was unlocked"
                                  {% endif %}
                                title: "{{ device_attr(lock, 'name') }}"
      - conditions:
          - condition: and
            conditions:
            - condition: template
              value_template: "{{ auto_lock_timer != 'timer.none' }}"
            - condition: trigger
              id:
                - Timer Finished
        sequence:
          - service: lock.lock
            metadata: {}
            data: {}
            target:
              entity_id: !input lock

mode: queued
max: 5