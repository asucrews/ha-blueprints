blueprint:
  name: Ratdgo 2.5i Stable (0.2.0rc1)
  homeassistant:
    min_version: 2024.5.0
  description: Ratdgo Notification and auto close
  domain: automation
  source_url: https://raw.githubusercontent.com/asucrews/ha-blueprints/main/automations/ratgdo_2.5i/ratdgo_2.5i.yaml
  input:
    ratdgo_device:
      name: Ratdgo Device
      description: Witch Ratdgo Device?
      selector:
        entity:
          domain:
            - cover
          multiple: false
    obstruction_entity:
      name: Obstruction Entity
      description: Witch Obstruction Entity?
      selector:
        entity:
          domain:
            - binary_sensor
          multiple: false
    garage_door_timer_helper:
      name: Garage Door Timer Helper
      description: Garage Door Timer Helper
      default: timer.none
      selector:
        entity:
          domain:
            - timer
          multiple: false
    light_bulbs:
      name: Smart Light Bulb, or Smart Light Bulb Group (Optional)
      description: >
        Select a smart light bulb or group of smart light bulbs to control
        within the designated area ("box").  These lights illuminate the space based
        on occupancy detected by the motion sensor.<br/>  <br/>Please note: Only entities
        within the light domain are selectable, and only one selection is allowed.  Default
        value: 'light.none'. Only change if you intend to use this field and this
        input is optional.<br/>
      default: "light.none"
      selector:
        entity:
          domain:
            - light
          multiple: false
    light_switch:
      name: Light, Light Group, Switch, or Switch Group (Optional)
      description: >
        Choose a light, light group, switch, or switch group to control
        within the designated area ("box").  These devices provide illumination based
        on occupancy detected by the motion sensor.<br/> <br/>Please note: Only entities
        within the light or switch domains are selectable, and only one selection
        is allowed.  Default value: 'light.none'. Only change if you intend to use
        this field and this input is optional.<br/>
      default: "light.none"
      selector:
        entity:
          domain:
            - light
            - switch
          multiple: false
    notify_group:
      name: "Notification Group (Optional)"
      description: >
        If several devices are to receive a notification, a [notify group](https://www.home-assistant.io/integrations/group/#notify-groups)
        can be used. Enter *notify* for all devices. If 'Notification Group' is
        defined 'Device to notify' will be ignored.
      default: ""
    bypass_helper:
      name: Bypass Helper
      description: Garage Door Bypass helper
      default: input_boolean.none
      selector:
        entity:
          domain:
            - input_boolean
          multiple: false

variables:
  ratdgo_device: !input ratdgo_device
  obstruction_entity: "{{device_attr(ratdgo_device, 'name')|regex_replace(find='', replace='', ignorecase=False)}}_obstruction"
  garage_door_timer_helper: !input garage_door_timer_helper
  light_bulbs: !input light_bulbs
  light_switch: !input light_switch
  notify_group: !input notify_group
  notify_service: "{% if(notify_group is defined and notify_group != '' ) %}notify.{{ notify_group }}{% elif (notify_device != none and notify_device != '' ) %}notify.mobile_app_{{ device_attr(notify_device, 'name') | slugify }}{% endif %}"
  bypass_helper: !input bypass_helper

trigger:
  - platform: state
    entity_id: !input ratdgo_device
    from: closed
    to: opening
    id: Garage Door is Opening
  - platform: state
    entity_id: !input ratdgo_device
    from: opening
    to: open
    id: Garage Door is Open
  - platform: state
    entity_id: !input ratdgo_device
    from: open
    to: closing
    id: Garage Door is Closing
  - platform: state
    entity_id: !input ratdgo_device
    from: closing
    to: closed
    id: Garage Door is Closed
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: !input garage_door_timer_helper
    id: Door timer is done

action:
  - choose:
      - conditions:
          - condition: trigger
            id:
              - Garage Door is Open
        sequence:
          - if:
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ light_bulbs != 'light.none' }}"
            then:
              - service: light.turn_on
                metadata: {}
                data: {}
                target:
                  entity_id: !input light_bulbs
          - if:
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ light_switch != 'light.none' }}"
            then:
              - service: light.turn_on
                metadata: {}
                data: {}
                target:
                  entity_id: !input light_switch
          - if:
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ garage_door_timer_helper != 'timer.none' }}"
            then:
              - service: timer.start
                metadata: {}
                data: {}
                target:
                  entity_id: !input garage_door_timer_helper
          - if:
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ notify_service != none and notify_service != '' }}"
            then:
              - service: "{{ notify_service }}"
                metadata: {}
                data:
                  message: Garage Door is Open
      - conditions:
          - condition: trigger
            id:
              - Garage Door is Closed
        sequence:
          - if:
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ garage_door_timer_helper != 'timer.none' }}"
            then:
              - service: timer.cancel
                metadata: {}
                data: {}
                target:
                  entity_id: !input garage_door_timer_helper
          - if:
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ notify_service != none and notify_service != '' }}"
            then:
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 1
                  milliseconds: 0
              - service: "{{ notify_service }}"
                data:
                  message: Garage door was closed.
      - conditions:
          - condition: trigger
            id:
              - Door timer is done
          - condition: state
            entity_id: !input ratdgo_device
            state: open
        sequence:
          - if:
              - condition: and
                conditions:
                  - condition: state
                    entity_id: !input obstruction_entity
                    state: "off"
            then:
              - service: cover.close_cover
                metadata: {}
                data: {}
                target:
                  entity_id: !input ratdgo_device
            else:
              - if:
                  - condition: and
                    conditions:
                      - condition: template
                        value_template: "{{ garage_door_timer_helper != 'timer.none' }}"
                then:
                  - service: timer.start
                    metadata: {}
                    data: {}
                    target:
                      entity_id: !input garage_door_timer_helper

mode: queued
max: 5
