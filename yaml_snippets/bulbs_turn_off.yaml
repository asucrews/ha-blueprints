# Turns off light_bulbs if configured and the light is on
- if:
    # Check if both conditions are met
    - condition: and
      conditions:
        # Check if light_bulbs is not equal to 'light.none'
        - condition: template
          value_template: "{{ light_bulbs != 'light.none' }}"
        # Check if the state of the light is "on"
        - condition: state
          entity_id: !input light_bulbs
          state: "on"
  then:
    # If light_control is set to "bulb" and transition feature is selected, turn off the light with transition
    - choose:
        - conditions:
            # Check if light_control is set to "bulb"
            - condition: template
              value_template: "{{ light_control == 'bulb' }}"
          sequence:
            # Turn off the light with transition if transition feature is selected
            - choose:
                - conditions:
                    # Check if transition feature is selected
                    - condition: template
                      value_template: "{{ 'use_transition' in light_control_features }}"
                  sequence:
                    # Turn off the light with specific settings
                    - service: light.turn_off
                      data:
                        transition: !input light_transition
                      target:
                        entity_id: !input light_bulbs
                - default:
                    # If conditions are not met, turn off the light without considering light_control or selected features
                    - service: light.turn_off
                      target:
                        entity_id: !input light_bulbs
      default:
        # If conditions are not met, turn off the light without considering light_control or selected features
        - service: light.turn_off
          target:
            entity_id: !input light_bulbs
